IDX Quote Automation
====================

This project now includes a Python automation script that downloads IDX ticker
quotes from the public Yahoo Finance API and rewrites the dashboard CSV
snapshot every weekday hour.

How it works
------------
* Tickers covered by default: 219 IDX listings sourced from the user-provided
  universe (queried via the `.JK` Yahoo suffix).
* Quote data replaces the snapshot stored at `data/idx-list.csv` so the dashboard
  always renders the most recent snapshot for the current trading date. Each
  row records the symbol, OHLC values, volume, and an ISO timestamp stored in
  the `last_updated_at` column.
* Fetches run every hour by default (skipping weekends automatically), but you
  can override the interval with a command-line flag.

Running the automation
----------------------

```bash
python automation/fetch_idx_quotes.py --output data/idx-list.csv
```

Useful flags:

* `--once`: Fetch once and exit. Useful for testing.
* `--interval <seconds>`: Change the fetch frequency.
* `--tickers <symbols>`: Override the tickers to fetch.
* `--output <path>`: Write the snapshot to a different CSV file.

Historical OCHV storage
-----------------------

The dashboard's Trading tab now reads from a SQLite snapshot that contains
daily open, close, high, low, and volume data starting on 1 August 2024. You
can refresh or extend this dataset with the dedicated history automation:

```bash
python automation/fetch_idx_history.py --db-path data/idx_ochv.sqlite3 --export-json data/trading_history.json
```

By default the script downloads candles for the five featured IDX tickers from
1 August 2024 up to today. Results are persisted into a local
`data/idx_ochv.sqlite3` database (generated on demand and ignored by git) and
optionally exported as `data/trading_history.json` for further analysis. The
script uses an upsert strategy so re-running it will update existing rows
without creating duplicates.
